/* ============================================= */
/* 1. BASE & GENERAL STYLES                      */
/* ============================================= */

body {
    font-family: 'Inter', sans-serif;
}

/* ============================================= */
/* 2. LAYOUT CONTAINERS                          */
/* ============================================= */

/* The main game screen container. */
#game-screen {
    height: auto;
    min-height: 100dvh; /* Use dynamic viewport height to fill the screen on mobile devices. */
}

/* Wrapper for the game board to maintain a square aspect ratio. */
.board-wrapper {
    /* Uses vh units to scale with viewport height. */
    width: 80vh; 
    height: 80vh;
    /* Caps the size on larger screens. */
    max-width: 800px;
    max-height: 800px;
    position: relative;
    margin-bottom: 2rem;
}

@media (orientation: portrait) {
/* Mobile Layout for Game Screen (Default) */
#game-screen {
    display: flex;
    flex-direction: column;
    height: 100dvh; /* Use dynamic viewport height to fill the screen. */
}

/* Container for the board, ensuring it doesn't shrink. */
#game-screen > div:first-child {
    flex-shrink: 0;
}

/* Controls panel takes remaining space and gets its own scrollbar. */
#game-controls {
    flex-grow: 1;       /* Allows this element to expand. */
    overflow-y: auto;   /* Adds an internal scrollbar if content overflows. */
    min-height: 0;      /* A necessary flexbox trick to make overflow work correctly. */
}
}

/* SVG container for drawing lines between board squares. */
.board-connections {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1; /* Positioned below the board squares. */
}

/* Main container for the board squares. */
.board-container {
    width: 100%;
    height: 100%;
    position: relative;
}

/* ============================================= */
/* 3. COMPONENT STYLES                           */
/* ============================================= */

/* --- Board & Player Elements --- */

/* A single square on the game board. */
.board-square {
    position: absolute;
    /* Sized relative to the parent .board-container. */
    width: 6%;
    height: 6%;
    border: 2px solid #374151; /* gray-700 */
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 10px;
    text-align: center;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    transition: all 0.2s ease-in-out;
    cursor: pointer;
    z-index: 2; /* Positioned above the connection lines. */
}

/* Highlight for a square that represents a possible move. */
.board-square.highlighted-move {
    border-color: #10b981; /* emerald-500 */
    transform: scale(1.1);
    box-shadow: 0 0 15px #10b981;
    z-index: 10; /* Ensures highlighted square is on top of everything. */
}

/* The player's game piece/token. */
.player-token {
    position: absolute;
    width: 3.5%;
    height: 3.5%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2.8vh;
    line-height: 1;
    /* Longer transition for smooth movement across the board. */
    transition: all 0.5s ease-in-out; 
    text-shadow: 0 0 5px rgba(0,0,0,0.5);
    z-index: 5; /* Positioned above squares but below highlighted ones. */
}

/* --- Player Panel & UI Elements --- */

/* A "wedge" representing a collected category in the player's panel. */
.category-wedge {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    display: inline-block;
    margin: 1px;
    border: 1px solid rgba(0,0,0,0.2);
    cursor: pointer;
    transition: transform 0.2s;
}

.category-wedge:hover {
    transform: scale(1.2);
}

/* --- 3D Dice --- */

/* Container to establish the 3D perspective for the dice. */
.dice-container {
    width: 60px;
    height: 60px;
    perspective: 1000px;
}

/* The dice itself, which holds the 3D faces. */
.dice {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.5s ease-out; /* For the rolling animation. */
}

/* A single face of the 3D dice. */
.face {
    position: absolute;
    width: 60px;
    height: 60px;
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid #999;
    font-size: 30px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #333;
}

/* 3D transforms to position each face correctly in 3D space. */
.front  { transform: rotateY(  0deg) translateZ(30px); }
.back   { transform: rotateY(180deg) translateZ(30px); }
.right  { transform: rotateY( 90deg) translateZ(30px); }
.left   { transform: rotateY(-90deg) translateZ(30px); }
.top    { transform: rotateX( 90deg) translateZ(30px); }
.bottom { transform: rotateX(-90deg) translateZ(30px); }

/* --- Modals & Popups (Question, Answer, History) --- */

/* Style for the top border of the modal, used for category color hints. */
#modal-content {
    border-top: 8px solid transparent;
    transition: border-color 0.3s ease-in-out;
}

/* Fluid font size for the question text. Min 16px, scales with 4% viewport width, max 20px. */
#question-text {
    font-size: clamp(1rem, 4vw, 1.25rem); 
    line-height: 1.6;
}

/* Container for multiple-choice answer buttons. */
#mcq-options-container {
    gap: 1rem; /* Increased spacing between buttons. */
    margin-top: 2rem; /* Increased spacing between question and answers. */
}

/* Buttons for multiple-choice answers. */
#mcq-options-container button {
    /* Fluid font size. Min 16px, preferred 3.5vw, max 18px. */
    font-size: clamp(1rem, 3.5vw, 1.125rem); 
    /* Fluid padding. */
    padding: clamp(0.75rem, 3vw, 1rem); 
    border: 1px solid #e5e7eb; /* Light gray border for better contrast. */
    transition: all 0.2s ease-in-out;
}

#mcq-options-container button:hover {
    border-color: #6366f1; /* Indigo color to match the theme. */
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
}

/* The popup that shows the result after answering. */
#answer-popup {
    transition: opacity 0.5s, transform 0.5s;
}

/* Fluid font size for text inside the answer popup. */
#answer-popup .text-left p {
    font-size: clamp(0.875rem, 3vw, 1rem);
}

/* Container for prompt history in the history modal. */
#history-content pre {
    max-height: 300px; /* Limits height for long prompts. */
}

/* --- Controls & Inputs (Buttons, Sliders, Pickers) --- */

/* Language selection button. */
.lang-btn.active { 
    background-color: #4f46e5; /* indigo-600 */
    color: white; 
}

/* Temperature slider styling. */
#temperature-slider {
    -webkit-appearance: none;
    appearance: none;
    background: transparent;
    cursor: pointer;
}
#temperature-slider::-webkit-slider-runnable-track {
    background: linear-gradient(to right, #60a5fa, #f87171);
    height: 0.5rem;
    border-radius: 0.5rem;
}
#temperature-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    margin-top: -4px;
    background-color: var(--thumb-color, #4f46e5); /* Uses a CSS variable for easier theme changes. */
    height: 20px;
    width: 20px;
    border-radius: 50%;
    border: 2px solid white;
    box-shadow: 0 0 5px rgba(0,0,0,0.3);
}

/* Emoji picker component. */
.emoji-picker {
    position: relative;
}
.emoji-button {
    font-size: 1.5rem;
    padding: 0.5rem;
    border-radius: 0.375rem;
    background-color: #f3f4f6;
    cursor: pointer;
    transition: background-color 0.2s;
}
.emoji-button:hover {
    background-color: #e5e7eb;
}
.emoji-panel {
    display: none;
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background-color: white;
    border: 1px solid #d1d5db;
    border-radius: 0.5rem;
    padding: 0.5rem;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    z-index: 20;
    grid-template-columns: repeat(6, 1fr);
    gap: 0.25rem;
    width: 240px;
}
.emoji-panel.active {
    display: grid;
}
.emoji-option {
    cursor: pointer;
    font-size: 1.5rem;
    text-align: center;
    padding: 0.25rem;
    border-radius: 0.25rem;
    transition: background-color 0.2s;
}
.emoji-option:hover {
    background-color: #f3f4f6;
}

/* --- Notifications --- */

/* Notification toast component. */
.notification {
    max-width: 350px;
    background-color: white;
    border-radius: 0.5rem;
    padding: 1rem;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    display: flex;
    align-items: start;
    gap: 0.75rem;
    /* Initial state for slide-in animation. */
    opacity: 0;
    transform: translateX(100%);
    transition: all 0.5s ease-in-out;
}
/* Final state for the animation. */
.notification.show {
    opacity: 1;
    transform: translateX(0);
}
/* Color-coded borders for different notification types. */
.notification.error   { border-left: 4px solid #ef4444; } /* red-500 */
.notification.success { border-left: 4px solid #22c55e; } /* green-500 */
.notification.info    { border-left: 4px solid #3b82f6; } /* blue-500 */

/* --- Dynamic Scaling for Game Controls (Portrait Mode Only) --- */

@media (orientation: portrait) {
    /* Make the main panel padding slightly smaller on very narrow screens. */
    #game-controls {
        padding: clamp(1rem, 5vw, 1.5rem); /* Min 16px, preferred 5vw, max 24px */
    }

    /* Scale the font size of the "Player's Turn" heading. */
    #game-controls h2 {
        font-size: clamp(1.125rem, 6vw, 1.5rem); /* Min 18px, preferred 6vw, max 24px */
    }

    /* Scale the player score entries. */
    #player-scores .p-2 {
        padding: clamp(0.25rem, 2vw, 0.5rem);
    }
    #player-scores .font-semibold {
        font-size: clamp(0.875rem, 4vw, 1rem); /* Min 14px, preferred 4vw, max 16px */
    }
    .category-wedge {
        width: clamp(8px, 3vw, 12px);
        height: clamp(8px, 3vw, 12px);
    }

    /* Scale the main "Roll Dice" button. */
    #roll-dice-btn {
        padding-top: clamp(0.5rem, 3vw, 0.75rem);
        padding-bottom: clamp(0.5rem, 3vw, 0.75rem);
        font-size: clamp(1rem, 5vw, 1.125rem); /* Min 16px, preferred 5vw, max 18px */
    }
}

/* ============================================= */
/* 4. STATE & HELPER CLASSES                     */
/* ============================================= */

/* Generic loading spinner class. */
.is-loading {
    animation: spin 1s linear infinite;
    display: inline-block; /* Required for transform to work correctly. */
}

/* Visibility toggles for all modals. */
#question-modal,
#history-modal,
#category-choice-modal,
#model-choice-modal {
    display: none; /* Hidden by default. */
}

#question-modal.visible,
#history-modal.visible,
#category-choice-modal.visible,
#model-choice-modal.visible {
    display: flex; /* Displayed when the .visible class is added via JS. */
}

/* ============================================= */
/* 5. ANIMATION KEYFRAMES                        */
/* ============================================= */

@keyframes spin {
    from { transform: rotate(0deg); }
    to   { transform: rotate(360deg); }
}

/* ============================================= */
/* 6. THEMING                                    */
/* ============================================= */

/* --- Theme Switcher Component --- */
#theme-switcher label {
    cursor: pointer;
    padding: 0.25rem 0.5rem;
    border-radius: 9999px;
    transition: background-color 0.2s, color 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.875rem; /* 14px */
    user-select: none;
}
.theme-radio {
    display: none; /* Hide the original radio inputs. */
}
/* Style the icon within the label when the associated radio is checked. */
.theme-radio:checked + span {
    background-color: transparent;
    box-shadow: none;
    transform: scale(1.25); /* Enlarge the icon to indicate selection. */
    font-weight: bold;
}

/* --- 6.1. SHARED STYLES for Dark & OLED Themes --- */
/* (Common text colors, controls, borders, etc.)   */

html.dark,
html.oled {
    color-scheme: dark;
}

html.dark body,
html.oled body {
    color: rgb(229 231 235); /* text-gray-200 */
}

/* Consistent text color overrides for various elements. */
html.dark h1, html.oled h1,
html.dark h2, html.oled h2,
html.dark h3, html.oled h3,
html.dark #question-text, html.oled #question-text,
html.dark .player-name-input, html.oled .player-name-input,
html.dark #player-count, html.oled #player-count,
html.dark .text-sm.text-gray-900, html.oled .text-sm.text-gray-900,
html.dark .font-bold.mb-3.flex.items-center.text-slate-800, html.oled .font-bold.mb-3.flex.items-center.text-slate-800 {
    color: rgb(229 231 235); /* text-gray-200 */
}

html.dark dl dt, html.oled dl dt {
    color: rgb(226 232 240); /* text-slate-200 */
}

/* Subtler text colors for descriptions and secondary text. */
html.dark dl dd, html.oled dl dd,
html.dark .text-gray-700, html.oled .text-gray-700,
html.dark .text-slate-700, html.oled .text-slate-700,
html.dark .text-gray-500, html.oled .text-gray-500,
html.dark #game-mode-description, html.oled #game-mode-description,
html.dark #knowledge-level-description, html.oled #knowledge-level-description {
    color: rgb(156 163 175); /* text-gray-400 */
}

/* Form controls styling. */
html.dark input, html.oled input,
html.dark select, html.oled select {
    background-color: rgb(75 85 99);
    border-color: rgb(107 114 128);
}

html.dark ::placeholder, html.oled ::placeholder {
    color: rgb(156 163 175);
}

html.dark input[type="checkbox"], html.oled input[type="checkbox"] {
    accent-color: #6366f1;
    border: 1px solid rgb(107 114 128);
    border-radius: 4px;
}

/* Button styling. */
html.dark .emoji-button, html.oled .emoji-button { background-color: rgb(55 65 81); }
html.dark .emoji-button:hover, html.oled .emoji-button:hover { background-color: rgb(75 85 99); }

html.dark .lang-btn, html.oled .lang-btn {
    background-color: rgb(55 65 81);
    color: rgb(229 231 235);
    border-color: rgb(107 114 128);
}
html.dark .lang-btn.active, html.oled .lang-btn.active {
    background-color: #4f46e5;
    border-color: #4f46e5;
    color: white;
}
html.dark .lang-btn:hover:not(.active), html.oled .lang-btn:hover:not(.active) {
    background-color: rgb(75 85 99);
}

/* Theming for answer/explanation text blocks. */
html.dark #player-answer-text,
html.oled #player-answer-text {
    color: #FFFFFF;
}
html.dark #correct-answer-text,
html.oled #correct-answer-text {
    background-color: #14532d;  /* Dark Green */
    color: #dcfce7;           /* Light Green Text */
    border: 1px solid #166534;
}
html.dark #explanation-text,
html.oled #explanation-text {
    background-color: #7c2d12; /* Dark Amber */
    color: #fef9c3;           /* Light Yellow Text */
    border: 1px solid #92400e;
}
html.dark #incorrect-explanation-text,
html.oled #incorrect-explanation-text {
    background-color: #7f1d1d; /* Dark Red */
    color: #fee2e2;           /* Light Red Text */
    border: 1px solid #991b1b;
}

html.dark [data-lang-key="infobox_rules_desc"] ul,
html.oled [data-lang-key="infobox_rules_desc"] ul {
    color: rgb(164 178 199); /* text-slate-400 */
}


/* --- 6.2. DARK Theme Specifics (Backgrounds) --- */

html.dark body { background-color: rgb(31 41 55); } /* bg-gray-800 */
html.dark .bg-white { background-color: rgb(55 65 81); } /* bg-gray-700 */
html.dark .bg-gray-100 { background-color: rgb(75 85 99); } /* bg-gray-600 */
html.dark .bg-slate-100 { background-color: rgb(51 65 85); } /* bg-slate-700 */
html.dark #theme-switcher { background-color: rgb(75 85 99); } /* bg-gray-600 */
html.dark .board-connections line { stroke: #6b7280; }

/* Add a dark overlay to board squares to reduce their brightness. */
html.dark .board-square::after { 
    content: ''; 
    position: absolute; 
    top: 0; left: 0; right: 0; bottom: 0; 
    border-radius: 8px; 
    background-color: black; 
    opacity: 0.25; 
    transition: opacity 0.3s ease; 
}
/* Remove overlay on highlighted squares to make them pop. */
html.dark .board-square.highlighted-move::after { opacity: 0; }

/* --- 6.3. OLED Theme Specifics (Backgrounds & Filters) --- */

/* Set all main backgrounds to pure black for a true OLED experience. */
html.oled body,
html.oled .bg-white,
html.oled .bg-gray-100,
html.oled .bg-slate-100,
html.oled #theme-switcher {
    background-color: #000000;
}

/* Add subtle borders to key containers to maintain visual separation. */
html.oled .bg-white, 
html.oled .bg-slate-100,
html.oled #theme-switcher {
    border: 1px solid #27272a; /* zinc-800, a very dark gray */
}

/* Connection lines for the board in OLED mode. */
html.oled .board-connections line { stroke: #4b5563; }

/* Add a darker overlay for OLED mode. */
html.oled .board-square::after { 
    content: ''; 
    position: absolute; 
    top: 0; left: 0; right: 0; bottom: 0; 
    border-radius: 8px; 
    background-color: black; 
    opacity: 0.4; 
    transition: opacity 0.3s ease; 
}
html.oled .board-square.highlighted-move::after { opacity: 0; }

/* Reduce brightness of colorful UI elements to prevent eye strain on OLED screens. */
html.oled #current-player-name,
html.oled #category-legend .w-4.h-4 {
    filter: brightness(0.7);
}
html.oled #category-legend span {
    color: rgb(156 163 175); /* text-gray-400 */
}
html.oled .themed-button {
    filter: brightness(0.7);
    transition: filter 0.2s ease-in-out;
}
html.oled .themed-button:hover {
    filter: brightness(0.85);
}

html.dark #question-modal,
html.dark #history-modal,
html.dark #category-choice-modal,
html.dark #model-choice-modal,
html.oled #question-modal,
html.oled #history-modal,
html.oled #category-choice-modal,
html.oled #model-choice-modal {
    background-color: rgba(2, 0, 0, 0.75); 
}

/* ============================================= */
/* 7. RESPONSIVE DESIGN                          */
/* ============================================= */

/* --- Mobile & Tablet First (Default styles are mobile-first) --- */

/* Dynamically scale the board to fit within the viewport on any device. */
.board-wrapper {
    /* min() ensures it never exceeds 85% of height or 90% of width. */
    width: min(85vh, 90vw);
    height: min(85vh, 90vw);
    margin: 1rem auto; /* Better centering for flexible containers. */
}

/* Media query for small screens (e.g., mobile phones). */
@media (max-width: 640px) {
    /* Stacks grid items in a single column on the setup screen. */
    #setup-screen .grid-cols-1.sm\\:grid-cols-2 {
        grid-template-columns: 1fr;
    }
}

/* --- Desktop (Large Screens) --- */

/* Media query for large screens (>= 1024px). */
@media (min-width: 1024px) {
    /* A specific class for the game grid layout on large screens. */
    .js-game-grid-layout {
        display: grid;
        grid-template-columns: 1fr 420px; /* Board on left, controls on right. */
        align-items: stretch; 
    }

    /* Center the board container vertically within its grid cell. */
    .js-game-grid-layout > div:first-child {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    /* Override board wrapper styles for the desktop layout. */
    .board-wrapper {
        width: 90%;
        aspect-ratio: 1 / 1;
        max-width: none; 
        max-height: 92vh; 
        margin: 0; /* Remove auto margin. */
    }

    /* Align the game controls panel to the start of its grid cell. */
    .js-game-grid-layout #game-controls {
        max-height: 90vh;
        justify-self: start;
    }

    /* Enlarge fonts and modals for better readability on large screens. */
    #question-modal .bg-white, #answer-popup {
        max-width: 1024px;
    }
    #question-modal #question-text, #answer-popup h3 {
        font-size: 1.75rem;
    }
    #mcq-options-container button, #answer-popup .text-left p {
        font-size: 1.125rem;
    }
}